version: '3.1'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: laravel8app
    restart: always
    tty: true
    environment:
      SERVICE_NAME: laravel8app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
       - ./:/var/www
       - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: laravel8app-webserver
    restart: always
    tty: true
    ports:
      - "8060:80"
        #  - "4431:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  db:
    image: postgres:10.1
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5433:5432
    volumes:
      - ./.docker/conf/postgres/:/docker-entrypoint-initdb.d/
  #MySQL Service
#  db:
#    image: mysql:8.0.17
#    container_name: laravel8App-db
#    command: --default-authentication-plugin=mysql_native_password
#    restart: always
#    tty: true
#    ports:
#      - "3309:3306"
#    environment:
#      MYSQL_DATABASE: laravel
#      MYSQL_ROOT_PASSWORD: 123456
#      SERVICE_TAGS: dev
#      SERVICE_NAME: mysql
#    volumes:
#      - dbdata:/var/lib/mysql
#    networks:
#      - app-network
#
  #adminer for db access
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - 8444:8080

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local

